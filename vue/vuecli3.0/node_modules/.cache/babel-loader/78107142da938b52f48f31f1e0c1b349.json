{"remainingRequest":"F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\babel-loader\\lib\\index.js!F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\GitHub\\js\\vue\\vuecli3.0\\src\\components\\transdata\\child.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\GitHub\\js\\vue\\vuecli3.0\\src\\components\\transdata\\child.vue","mtime":1545373711863},{"path":"F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\GitHub\\js\\vue\\vuecli3.0\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\n/*  父组件给子组件传值\r\n1. 父组件调用子组件时，将要传的东西，绑定动态属性\r\n<child :title='title' :dosth='dosth'></child>   //可绑定数据，方法，父组件本身\r\n2.子组件接受\r\nprops：['titkle','dosth']\r\n或者\r\nprops:{\r\n    'title':string,\r\n    'dosth':function\r\n}\r\n3.直接在子组件中使用\r\n\r\n\r\n */\n\n/*  子组件中主动获得父组件的数据和方法\r\n直接在子组件中通过\r\n\r\nthis.$parent.数据\r\nthis.$parent.方法\r\n获得父组件的数据和方法\r\n\r\n*/\nexport default {\n  name: \"child\",\n  data: function data() {\n    return {\n      msg: \"子组件的数据\"\n    };\n  },\n  methods: {\n    getParent: function getParent() {\n      alert(this.$parent.msg);\n    }\n  },\n  props: ['title', 'dosth']\n};",{"version":3,"sources":["child.vue"],"names":[],"mappings":";;;;;;;;AAQA;;;;;;;;;;;;;;;AAgBA;;;;;;;;AAQA,eAAA;AACA,EAAA,IAAA,EAAA,OADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,GAAA,EAAA;AADA,KAAA;AAGA,GANA;AAOA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AACA,MAAA,KAAA,CAAA,KAAA,OAAA,CAAA,GAAA,CAAA;AACA;AAHA,GAPA;AAYA,EAAA,KAAA,EAAA,CAAA,OAAA,EAAA,OAAA;AAZA,CAAA","sourcesContent":["<template>\r\n <div id=\"child\">\r\n     <div>{{title}}</div>\r\n     <button @click=\"dosth()\">传值使用父组件方法</button>\r\n     <button @click='getParent'>主动获得父组件属性和方法</button>\r\n </div>\r\n</template>\r\n<script>\r\n/*  父组件给子组件传值\r\n1. 父组件调用子组件时，将要传的东西，绑定动态属性\r\n<child :title='title' :dosth='dosth'></child>   //可绑定数据，方法，父组件本身\r\n2.子组件接受\r\nprops：['titkle','dosth']\r\n或者\r\nprops:{\r\n    'title':string,\r\n    'dosth':function\r\n}\r\n3.直接在子组件中使用\r\n\r\n\r\n */\r\n\r\n\r\n/*  子组件中主动获得父组件的数据和方法\r\n直接在子组件中通过\r\n\r\nthis.$parent.数据\r\nthis.$parent.方法\r\n获得父组件的数据和方法\r\n\r\n*/\r\n    export default{\r\n        name:\"child\",\r\n        data(){\r\n            return {\r\n              msg: \"子组件的数据\"\r\n            }\r\n        },\r\n        methods: {\r\n            getParent(){\r\n                alert(this.$parent.msg)\r\n            }\r\n        },\r\n        props:['title','dosth']\r\n    }\r\n</script>\r\n<style scoped>\r\n\r\n</style>"],"sourceRoot":"src\\components\\transdata"}]}